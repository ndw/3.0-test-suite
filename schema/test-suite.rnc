namespace rng  = "http://relaxng.org/ns/structure/1.0"
namespace t = "http://xproc.org/ns/testsuite/3.0"
default namespace = "http://xproc.org/ns/testsuite/3.0"

start = test | test-suite | test-div

test-suite =
    element t:test-suite {
        attribute features {
            list { xsd:token+ }
        } ?
      & attribute when { text }?
      & attribute src { text }?
      & attribute version { text }?
      & ((info|title)?, test*, test-div*)
    }

test-div =
    element t:div {
        (info|title)?, test*, test-div*
    }

info =
    element t:info {
        title & author? & date? & specref?
    }

title =
    element title { text }

author =
    element author { text }

date =
    element date { xsd:date|xsd:dateTime }

specref =
    element specref { text }

test = passingTest | failingTest

passingTest =
    element t:test {
        attribute features {
            list { xsd:token+ }
        } ?
      & attribute when { text }?
      & attribute src { text }?
      & attribute step { text }?
      & attribute expected { "pass" }
      & ((info|title)? & description? & input* & option* & pipeline? & schematron?)
    }

failingTest =
    element t:test {
        attribute features {
            list { xsd:token+ }
        } ?
      & attribute when { text }?
      & attribute src { text }?
      & attribute step { text }?
      & attribute expected { "fail" }
      & attribute code { xsd:NMTOKENS }
      & ((info|title)? & description? & input* & option* & pipeline?)
    }

pipeline =
    element t:pipeline {
        attribute src { text }?
      & any*
    }

schematron =
    element t:schematron {
        attribute src { text }?
      & any*
    }

input =
    element t:input {
        attribute port { text }
      & attribute src { text }?
      & any*
    }

option =
    element t:option {
        attribute name { text }
      & attribute select { text }?
      & any*
    }

any =
    element * {
        attribute * { text }*
      & (text | any)*
    }

description =
    element t:description{
        any*
    }
