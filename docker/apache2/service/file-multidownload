#!/usr/bin/perl -- # -*- Perl -*-

use strict;
use English;

# This result is like fixed-multipart except that it includes filenames
# for the parts. (I'm assuming that http-request should honor those in
# constructing the URIs for the parts.)

my $boundary = "=-=-=-=-=";

print "Content-type: multipart/related; boundary=\"$boundary\"\r\n\r\n";

print "--$boundary\r\n";

my $file = "/usr/local/apache2/htdocs/docs/helloworld.html";
print "Content-type: text/html\r\n";
print "Content-Disposition: attachment; filename=download-part1.html\n";
print "Content-length: ", -s $file, "\r\n";
print "\r\n";
open (F, "/usr/local/apache2/htdocs/docs/helloworld.html");
while (<F>) {
    print $_;
}
close (F);

print "\r\n--$boundary\r\n";

$file = "/usr/local/apache2/htdocs/docs/helloworld.png";
print "Content-type: image/png\r\n";
print "Content-Disposition: attachment; filename=images/download-part2.png\n";
print "Content-length: ", -s $file, "\r\n";
print "\r\n";
open (F, "/usr/local/apache2/htdocs/docs/helloworld.png");
binmode F;
while (read(F, $_, 4096)) {
    print $_;
}
close (F);

print "\r\n--${boundary}--\r\n";
